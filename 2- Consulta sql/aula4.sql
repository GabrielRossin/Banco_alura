
SELECT * FROM TABELA_DE_VENDEDORES;

SELECT * FROM NOTAS_FISCAIS;

SELECT MATRICULA, NOME, COUNT(*) AS NUMERO_NOTAS FROM NOTAS_FISCAIS
GROUP BY MATRICULA, NOME;

SELECT A.MATRICULA, B.NOME, COUNT(*) FROM NOTAS_FISCAIS A 
INNER JOIN TABELA_DE_VENDEDORES B
ON A.MATRICULA = B.MATRICULA
GROUP BY A.MATRICULA, B.NOME;

SELECT TO_CHAR(DATA_VENDA, 'YYYY'), SUM(QUANTIDADE * PRECO) AS FATURAMENTO
FROM NOTAS_FISCAIS NF INNER JOIN ITENS_NOTAS_FISCAIS INF 
ON NF.NUMERO = INF.NUMERO
GROUP BY TO_CHAR(DATA_VENDA, 'YYYY');


SELECT COUNT(*) FROM TABELA_DE_CLIENTES;

SELECT CPF, COUNT(*) FROM NOTAS_FISCAIS GROUP BY CPF;

SELECT DISTINCT A.CPF AS CPF_DO_CADASTRO
, A.NOME, B.CPF AS CPF_DA_NOTA 
FROM TABELA_DE_CLIENTES A LEFT JOIN NOTAS_FISCAIS B
ON A.CPF = B.CPF
WHERE B.CPF IS NULL;


SELECT DISTINCT A.CPF AS CPF_DO_CADASTRO
, A.NOME, B.CPF AS CPF_DA_NOTA 
FROM NOTAS_FISCAIS B RIGHT JOIN TABELA_DE_CLIENTES A
ON A.CPF = B.CPF
WHERE B.CPF IS NULL;



SELECT TABELA_DE_VENDEDORES.NOME AS NOME_VENDEDOR
, TABELA_DE_VENDEDORES.BAIRRO AS BAIRRO_VENDEDOR
, TABELA_DE_CLIENTES.NOME AS NOME_CLIENTE
, TABELA_DE_CLIENTES.BAIRRO AS BAIRRO_CLIENTE
FROM TABELA_DE_VENDEDORES
INNER JOIN TABELA_DE_CLIENTES
ON TABELA_DE_VENDEDORES.BAIRRO = TABELA_DE_CLIENTES.BAIRRO;

SELECT TABELA_DE_VENDEDORES.NOME AS NOME_VENDEDOR
, TABELA_DE_VENDEDORES.BAIRRO AS BAIRRO_VENDEDOR
, TABELA_DE_CLIENTES.NOME AS NOME_CLIENTE
, TABELA_DE_CLIENTES.BAIRRO AS BAIRRO_CLIENTE
FROM TABELA_DE_VENDEDORES
LEFT JOIN TABELA_DE_CLIENTES
ON TABELA_DE_VENDEDORES.BAIRRO = TABELA_DE_CLIENTES.BAIRRO;

SELECT TABELA_DE_VENDEDORES.NOME AS NOME_VENDEDOR
, TABELA_DE_VENDEDORES.BAIRRO AS BAIRRO_VENDEDOR
, TABELA_DE_CLIENTES.NOME AS NOME_CLIENTE
, TABELA_DE_CLIENTES.BAIRRO AS BAIRRO_CLIENTE
FROM TABELA_DE_VENDEDORES
RIGHT JOIN TABELA_DE_CLIENTES
ON TABELA_DE_VENDEDORES.BAIRRO = TABELA_DE_CLIENTES.BAIRRO;

SELECT TABELA_DE_VENDEDORES.NOME AS NOME_VENDEDOR
, TABELA_DE_VENDEDORES.BAIRRO AS BAIRRO_VENDEDOR
, TABELA_DE_CLIENTES.NOME AS NOME_CLIENTE
, TABELA_DE_CLIENTES.BAIRRO AS BAIRRO_CLIENTE
FROM TABELA_DE_VENDEDORES
FULL JOIN TABELA_DE_CLIENTES
ON TABELA_DE_VENDEDORES.BAIRRO = TABELA_DE_CLIENTES.BAIRRO;

SELECT TABELA_DE_VENDEDORES.NOME AS NOME_VENDEDOR
, TABELA_DE_VENDEDORES.BAIRRO AS BAIRRO_VENDEDOR
, TABELA_DE_CLIENTES.NOME AS NOME_CLIENTE
, TABELA_DE_CLIENTES.BAIRRO AS BAIRRO_CLIENTE
FROM TABELA_DE_VENDEDORES,  TABELA_DE_CLIENTES;



SELECT DISTINCT BAIRRO FROM TABELA_DE_CLIENTES
UNION
SELECT DISTINCT BAIRRO FROM TABELA_DE_VENDEDORES;

SELECT DISTINCT BAIRRO FROM TABELA_DE_CLIENTES
UNION ALL
SELECT DISTINCT BAIRRO FROM TABELA_DE_VENDEDORES;

SELECT DISTINCT BAIRRO AS BAIRRO_CLIENTE FROM TABELA_DE_CLIENTES
UNION ALL
SELECT DISTINCT BAIRRO AS BAIRRO_VENDEDOR FROM TABELA_DE_VENDEDORES;

SELECT DISTINCT BAIRRO AS BAIRRO, 'CLIENTE' AS TIPO FROM TABELA_DE_CLIENTES
UNION
SELECT DISTINCT BAIRRO AS BAIRRO, 'VENDEDOR' AS TIPO FROM TABELA_DE_VENDEDORES;




SELECT DISTINCT BAIRRO FROM TABELA_DE_VENDEDORES;

SELECT * FROM TABELA_DE_CLIENTES WHERE BAIRRO
IN ('Tijuca','Santo Amaro','Jardins','Copacabana','ASASAS');

SELECT * FROM TABELA_DE_CLIENTES WHERE BAIRRO
IN (SELECT DISTINCT BAIRRO FROM TABELA_DE_VENDEDORES);

SELECT EMBALAGEM, SUM(PRECO_DE_LISTA) AS SOMA_PRECO
FROM TABELA_DE_PRODUTOS GROUP BY EMBALAGEM
HAVING SUM(PRECO_DE_LISTA) <= 80;

SELECT Z.EMBALAGEM, Z.SOMA_PRECO FROM
(SELECT EMBALAGEM, SUM(PRECO_DE_LISTA) AS SOMA_PRECO
FROM TABELA_DE_PRODUTOS GROUP BY EMBALAGEM) Z
WHERE Z.SOMA_PRECO <= 80;



SELECT CPF, COUNT(*) FROM NOTAS_FISCAIS
WHERE TO_CHAR(DATA_VENDA, 'YYYY') = '2016'
GROUP BY CPF
HAVING COUNT(*) > 2000;


SELECT nf.cpf , nf.quantidade
FROM 
    (   SELECT CPF, COUNT(*)  quantidade FROM NOTAS_FISCAIS
        WHERE TO_CHAR(DATA_VENDA, 'YYYY') = '2016'
        GROUP BY CPF
    ) nf
WHERE nf.quantidade > 2000;    





SELECT EMBALAGEM, SUM(PRECO_DE_LISTA) AS SOMA_PRECO
FROM TABELA_DE_PRODUTOS GROUP BY EMBALAGEM;

/*
o que aprendemos

Como conectar duas ou mais tabelas através de JOINs
Os tipos de JOIN existentes e quais são suportados pelo Oracle
Os comandos UNION e UNION ALL para juntar duas ou mais seleções, desde que tenham os mesmos campos selecionados
A usar uma consulta como critério de filtro de uma outra consulta
Como usar uma consulta dentro de outra consulta
A criar e usar visões

*/



















































